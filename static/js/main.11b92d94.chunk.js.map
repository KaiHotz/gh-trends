{"version":3,"sources":["routes/routePath.ts","store/trending/slice.ts","store/trending/selectors.ts","comopnents/StyledComponents.ts","comopnents/Select/Select.tsx","utils/createDictionary.ts","comopnents/NavBar/dictionary.ts","comopnents/NavBar/NavBar.tsx","pages/Trending/components/Repositories/Repositories.tsx","pages/Trending/components/Developers/Developers.tsx","pages/Trending/dictionary.ts","pages/Trending/Trending.tsx","App.tsx","store/reducers.ts","store/store.ts","reportWebVitals.ts","index.tsx"],"names":["routePath","createSlice","name","initialState","since","prog_lang","spoken_language_code","reducers","setSpokenLanguage","state","payload","setProgLanguage","setSince","reducer","actions","trendingReducer","trendSelector","createSelector","trending","StyledPageHeader","styled","Pagehead","StyledButtonInvisible","ButtonInvisible","Select","options","label","filterTxt","value","onChange","useState","filter","setFilter","filteredOptions","option","toLowerCase","startsWith","css","defaultValue","as","Modal","Filter","placeholder","e","currentTarget","List","map","Item","selected","onClick","val","createDictionary","base","messages","dictionary","Object","entries","reduce","dict","key","id","defaultMessage","defineMessages","repositories","developers","spoken_lang","spoken_lang_filter","lanuage","language_filter","date_range","date_range_filter","daily","weekly","monthly","NavBar","fm","useIntl","formatMessage","location","useLocation","dispatch","useDispatch","useSelector","isDeveloper","pathname","includes","className","Links","Link","to","NavLink","isActive","Repositories","Developers","title","description","Trending","fontSize","exact","path","component","App","rootReducer","combineReducers","store","configureStore","devTools","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","defaultOptions","queries","cacheTime","refetchOnWindowFocus","retry","ReactDOM","render","colorMode","dayScheme","nightScheme","QueryClientProvider","client","initialIsOpen","position","locale","defaultLocale","document","getElementById"],"mappings":"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","file":"static/js/main.11b92d94.chunk.js","sourcesContent":["export const routePath = {\n  main: '/gh-trends',\n  developers: '/gh-trends/developers',\n};\n","import { createSlice } from '@reduxjs/toolkit';\nimport { ITrendingState } from './types';\n\nconst initialState: ITrendingState = {\n  since: 'daily',\n  prog_lang: 'any',\n  spoken_language_code: 'any',\n};\n\nconst { reducer, actions } = createSlice({\n  name: 'LANGUAGE',\n  initialState,\n  reducers: {\n    setSpokenLanguage: (state, { payload }) => ({ ...state, spoken_language_code: payload }),\n    setProgLanguage: (state, { payload }) => ({ ...state, prog_lang: payload }),\n    setSince: (state, { payload }) => ({ ...state, since: payload }),\n  },\n});\nexport const { setProgLanguage, setSpokenLanguage, setSince } = actions;\nexport const trendingReducer = reducer;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { IReduxStore } from '../types';\n\nconst trendingState = (state: IReduxStore) => state.trending;\n\nexport const trendSelector = createSelector(trendingState, ({ prog_lang, spoken_language_code, since }) => ({\n  prog_lang,\n  spoken_language_code,\n  since,\n}));\n","import { Pagehead, ButtonInvisible } from '@primer/components';\nimport styled from 'styled-components';\n\nexport const StyledPageHeader = styled(Pagehead)`\n  border-color: var(--color-border-primary);\n  background-color: var(--color-bg-tertiary);\n  color: var(--color-text-primary);\n  text-align: center;\n  p {\n    color: var(--color-text-secondary);\n    margin-bottom: 20px;\n  }\n`;\n\nexport const StyledButtonInvisible = styled(ButtonInvisible)`\n  font-size: 14px;\n  font-weight: 400;\n  color: var(--color-text-secondary);\n  padding: 0 15px;\n  &:focus {\n    box-shadow: none;\n  }\n  &:after {\n    border: 4px solid transparent;\n    border-top-color: currentcolor;\n    content: '';\n    display: inline-block;\n    height: 0;\n    vertical-align: -3px;\n    margin-left: 3px;\n    width: 0;\n  }\n`;\n","import React, { FC, useState, SyntheticEvent, ReactNode } from 'react';\nimport { SelectMenu } from '@primer/components';\nimport { StyledButtonInvisible } from '../StyledComponents';\n\nexport interface ISelectOption {\n  value: string;\n  label: string;\n}\n\nexport interface ISelectProps {\n  options: ISelectOption[];\n  label: ReactNode;\n  filterTxt: string;\n  value: string;\n  onChange: (val: string) => void;\n}\n\nexport const Select: FC<ISelectProps> = ({ options, label, filterTxt, value, onChange }) => {\n  const [filter, setFilter] = useState('');\n\n  const filteredOptions = options.filter((option) => option.label.toLowerCase().startsWith(filter.toLowerCase()));\n\n  const handleChange = (val: string) => onChange(val);\n\n  return (\n    <SelectMenu css={{}} defaultValue=\"foo\">\n      <StyledButtonInvisible as=\"summary\">{label}</StyledButtonInvisible>\n      <SelectMenu.Modal>\n        <SelectMenu.Filter\n          placeholder={filterTxt}\n          value={filter}\n          aria-label={filterTxt}\n          onChange={(e: SyntheticEvent<HTMLInputElement>) => setFilter(e.currentTarget.value)}\n        />\n        <SelectMenu.List>\n          {filteredOptions.map((option) => (\n            <SelectMenu.Item key={option.value} selected={value === option.value} onClick={() => handleChange(option.value)}>\n              {option.label}\n            </SelectMenu.Item>\n          ))}\n        </SelectMenu.List>\n      </SelectMenu.Modal>\n    </SelectMenu>\n  );\n};\n","import { defineMessages, MessageDescriptor } from 'react-intl';\n\nexport const createDictionary = <U extends Record<string | number, string>, K extends keyof U, V extends U[K]>(\n  base: string,\n  messages: U,\n) => {\n  const entries = Object.entries(messages) as Array<[K, V]>;\n  const dictionary = entries.reduce((dict, [key, value]) => {\n    dict[key] = {\n      id: `${base}_${key}`,\n      defaultMessage: value,\n    };\n\n    return dict;\n  }, {} as Record<K, MessageDescriptor>);\n\n  return defineMessages<K, MessageDescriptor, typeof dictionary>(dictionary);\n};\n","import { createDictionary } from '../../utils';\n\nexport const messages = createDictionary('trending', {\n  repositories: 'Repositories',\n  developers: 'Developers',\n  spoken_lang: 'Spoken Language: {value}',\n  spoken_lang_filter: 'Filter by spoken language',\n  lanuage: 'Language: {value}',\n  language_filter: 'Filter by language',\n  date_range: 'Date range: {value}',\n  date_range_filter: 'Filter by date range',\n  daily: 'Today',\n  weekly: 'This week',\n  monthly: 'This month',\n});\n","import React, { FC } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, NavLink } from 'react-router-dom';\nimport { SubNav, Flex } from '@primer/components';\nimport { trendSelector, setSpokenLanguage, setProgLanguage, setSince } from '../../store/trending';\nimport { Since } from '../../api';\nimport { routePath } from '../../routes';\nimport { Select } from '../Select';\nimport { messages } from './dictionary';\n\nexport const NavBar: FC = () => {\n  const { formatMessage: fm } = useIntl();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { prog_lang, spoken_language_code, since } = useSelector(trendSelector);\n  const isDeveloper = location.pathname.includes(routePath.developers);\n\n  return (\n    <div className=\"Box-header d-md-flex flex-items-center flex-justify-between\">\n      <SubNav aria-label=\"Trending\">\n        <SubNav.Links>\n          <SubNav.Link to={routePath.main} as={NavLink} isActive={() => !isDeveloper}>\n            {fm(messages.repositories)}\n          </SubNav.Link>\n          <SubNav.Link to={routePath.developers} as={NavLink}>\n            {fm(messages.developers)}\n          </SubNav.Link>\n        </SubNav.Links>\n      </SubNav>\n      <Flex>\n        {!isDeveloper && (\n          <Select\n            options={[\n              { value: 'foo', label: 'Foo' },\n              { value: 'bar', label: 'Bar' },\n            ]}\n            label={fm(messages.spoken_lang, { value: spoken_language_code })}\n            filterTxt={fm(messages.spoken_lang_filter)}\n            value={spoken_language_code}\n            onChange={(value) => dispatch(setSpokenLanguage(value))}\n          />\n        )}\n        <Select\n          options={[\n            { value: 'foo', label: 'Foo' },\n            { value: 'bar', label: 'Bar' },\n          ]}\n          label={fm(messages.lanuage, { value: prog_lang })}\n          filterTxt={fm(messages.language_filter)}\n          value={prog_lang}\n          onChange={(value) => dispatch(setProgLanguage(value))}\n        />\n        <Select\n          options={[\n            { value: 'daily', label: fm(messages.daily) },\n            { value: 'weekly', label: fm(messages.weekly) },\n            { value: 'monthly', label: fm(messages.monthly) },\n          ]}\n          label={fm(messages.date_range, { value: fm(messages[since as Since]) })}\n          filterTxt={fm(messages.date_range_filter)}\n          value={since}\n          onChange={(value) => dispatch(setSince(value))}\n        />\n      </Flex>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useRepositories } from '../../../../api';\nimport { messages } from './dictionary';\n\nexport const Repositories: FC = () => {\n  const { formatMessage: fm } = useIntl();\n\n  // const { data } = useRepositories();\n\n  // console.log(data);\n\n  return (\n    <ul>\n      <li className=\"Box-row\">Box row Repo one</li>\n      <li className=\"Box-row\">Box row Repo two</li>\n      <li className=\"Box-row\">Box row Repo three</li>\n      <li className=\"Box-row\">Box row Repo four</li>\n    </ul>\n  );\n};\n","import React, { FC } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDevelopers } from '../../../../api';\nimport { messages } from './dictionary';\n\nexport const Developers: FC = () => {\n  const { formatMessage: fm } = useIntl();\n\n  // const { data } = useDevelopers();\n\n  // console.log(data);\n\n  return (\n    <ul>\n      <li className=\"Box-row\">Box row Dev one</li>\n      <li className=\"Box-row\">Box row Dev two</li>\n      <li className=\"Box-row\">Box row Dev three</li>\n      <li className=\"Box-row\">Box row Dev four</li>\n    </ul>\n  );\n};\n","import { createDictionary } from '../../utils';\n\nexport const messages = createDictionary('trending', {\n  title: 'Trending',\n  description: 'See what the GitHub community is most excited about {value}.',\n\n  daily: 'today',\n  weekly: 'this week',\n  monthly: 'this month',\n});\n","import React, { FC } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { Heading, Text, BorderBox } from '@primer/components';\nimport { routePath } from '../../routes';\nimport { trendSelector } from '../../store/trending';\nimport { Since } from '../../api';\nimport { StyledPageHeader, NavBar } from '../../comopnents';\nimport { Repositories, Developers } from './components';\nimport { messages } from './dictionary';\n\nexport const Trending: FC = () => {\n  const { formatMessage: fm } = useIntl();\n  const { since } = useSelector(trendSelector);\n\n  return (\n    <div>\n      <StyledPageHeader>\n        <Heading fontSize={32}>{fm(messages.title)}</Heading>\n        <Text as=\"p\" fontSize={16}>\n          {fm(messages.description, { value: fm(messages[since as Since]) })}\n        </Text>\n      </StyledPageHeader>\n      <div className=\"pt-4 position-relative container-lg p-responsive\">\n        <BorderBox className=\"Box Box--responsive hx_Box--firstRowRounded0\">\n          <NavBar />\n          <Switch>\n            <Route exact path={routePath.main} component={Repositories} />\n            <Route exact path={routePath.developers} component={Developers} />\n          </Switch>\n        </BorderBox>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { routePath } from './routes';\nimport { Trending } from './pages/Trending';\nimport './App.scss';\n\nconst App: FC = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path={routePath.main} component={Trending} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { trendingReducer } from './trending/slice';\n\nexport const rootReducer = combineReducers({\n  trending: trendingReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","/* eslint-disable @typescript-eslint/no-var-requires */\n/* eslint-disable global-require */\nimport { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\nimport { rootReducer, RootState } from './reducers';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: process.env.NODE_ENV !== 'production',\n});\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n\nexport { store };\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { ThemeProvider } from '@primer/components';\nimport { IntlProvider } from 'react-intl';\nimport App from './App';\nimport { store } from './store';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      cacheTime: 0,\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider colorMode=\"night\" dayScheme=\"light\" nightScheme=\"dark\">\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <ReactQueryDevtools initialIsOpen={false} position=\"bottom-right\" />\n        <IntlProvider locale=\"en\" defaultLocale=\"en\">\n          <App />\n        </IntlProvider>\n      </QueryClientProvider>\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}